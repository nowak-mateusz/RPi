import pygame
from pygame.locals import *
from pgu import gui

from clock import *
from temp import *

import global_var as g
from Adafruit.Adafruit_MCP4725 import MCP4725

# Director
class Director(object):
   
   def __init__(self):
      self.bulider = None
      
   def construct_gui(self):
      self.builder.new_gui()
      self.builder.build_gui()
      
   def get_gui(self):
      return self.builder.page
      
# Bulider      
class Builder(object):
   
   def __init__(self):
      self.page = None
   
   def new_gui(self):
      self.page = Page()
      
class BuilderWelcomPage(Builder):

   def build_gui(self):
      self.page.tr()
      self.page.td(gui.Label('Welcom'))

# Main Page Bulider  - clock   
class BuilderMainPage(Builder):

   def build_gui(self):
      cl = Clock()
      cl.connect(gui.CLICK,self.onClick,1)
      cl.set_font_size(90)
      self.page.tr()
      self.page.td(cl,colspan=2)
      #self.page.tr()
      #self.page.td(gui.Label("Slider"))
      #self.page.td(gui.Label("Slider"))

   def onClick(self,value):
     g.mode = value
     g.click = True

# Temp page
class BuilderTempPage(Builder):
   
   def build_gui(self):
      temp = Temperature()
      temp.set_font_size(90)
      btn_n = gui.Button('next',height=50)
      btn_n.connect(gui.CLICK,self.onClick,2) 
      btn_b = gui.Button('back',height=50)
      btn_b.connect(gui.CLICK,self.onClick,0)
      self.page.tr()
      self.page.td(temp,colspan=2)
      self.page.tr()
      self.page.td(btn_b)
      self.page.td(btn_n,colspan=2)

   def onClick(self,value):
      g.mode = value
      g.click = True

# Slider page
class BuilderSliderPage(Builder):

   def build_gui(self):
      btn_n = gui.Button('next',height=50)
      btn_n.connect(gui.CLICK,self.onClick,3)
      btn_b = gui.Button('back',height=50)
      btn_b.connect(gui.CLICK,self.onClick,1)
      slider = gui.HSlider(value=g.DAC_value,min=0,max=4095,size=30,width=220,height=30)
      slider.connect(gui.CHANGE, self.sliderFunction, slider)
      self.lbl = gui.Label('Out Value: ' + str(g.DAC_value))
      self.page.tr()
      self.page.td(self.lbl,colspan=2)
      self.page.tr()
      self.page.td(slider,colspan=2,height=50)
      self.page.tr()
      self.page.td(btn_b)
      self.page.td(btn_n,colspan=2)

      self.dac = MCP4725(g.I2C_port)


   def onClick(self,value):
      g.mode = value
      g.click = True

   def sliderFunction(self,value):
      g.DAC_value = value.value;
      self.lbl.set_text('Out Value: ' + str(value.value))
      self.dac.setVoltage(value.value)
      #print str(value.value*100/4095)

class BuilderPIDMain(Builder):

   def build_gui(self):
      self.btn_start = gui.Button('Start') 
      self.btn_end = gui.Button('Stop')
      self.btn_setings = gui.Button('Settings')
      self.btn_plot = gui.Button('Plot')

      self.page.tr()
      self.page.td(self.btn_start)
      self.page.td(self.btn_end)
      self.page.tr()
      self.page.td(self.btn_setings,colspan=2)
      self.page.tr()
      self.page.td(self.btn_plot,colpan=2)

# Product
class Page(gui.Table):

   def __init__(self):
      gui.Table.__init__(self)
      self.width=320
      self.height=240

